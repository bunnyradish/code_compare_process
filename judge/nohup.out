select * from eva_code where code_id = 79
&{79 QuickSort 109 #include <bits/stdc++.h>

using namespace std;

int onesort(int r[], int s, int e)//对当前区间进行划分，s为起始位置，e为结束位置
{
    int i = s;
    int j = e;
    while(i < j)//判断左右两边的下标，
    {
        while(i < j && r[i] <= r[j])//先对右边进行扫描，扫描到左边大于右边则停止循环并进行交换，下次从左边扫描
        {
            j--;
        }
        if(i < j)
        {
            int tmp = r[i];
            r[i] = r[j];
            r[j] = tmp;
            i++;
        }
        while(i < j && r[i] <= r[j])//对左边进行扫描，扫描到左边大于右边则停止扫描并进行交换，下次从右边扫描
        {
            i++;
        }
        if(i < j)
        {
            int tmp = r[i];
            r[i] = r[j];
            r[j] = tmp;
            j--;
        }
    }
    return i;//返回当前区间轴值的位置
}

void quicksort(int r[], int s, int e)
{
    if(s < e)
    {
        int mid = onesort(r, s, e);//对当前区间进行划分并取得当前区间的轴值
        quicksort(r, s, mid-1);//对轴值左边区间进行划分
        quicksort(r, mid+1, e);//对轴值右边区间进行划分
    }
}

int main()
{
    int n;
    int r[1000005];

    scanf("%d", &n);
    for(int i = 1; i <= n; i++)
    {
        scanf("%d", &r[i]);
    }
    quicksort(r, 1, n);
    for(int i = 1; i <= n; i++)
    {
        printf("%d%c", r[i], " \n"[i==n]);
    }
    return 0;
}
/*
7
12 15 9 20 6 31 24
8
50 13 55 97 27 38 49 65
7
23 13 49 6 31 19 28
*/

 /var/www/html/zt-code-evaluation/code_file/QuickSort109.cpp 2020-06-07 18:00:54 2020-07-17 18:08:25}

---code running---
select code_id, user_id, input_path from run_code where code_id = 79 and user_id = 109 and select_flag = '65142ef5af467a8f9511358073b4f44a'
/var/www/html/zt-code-evaluation/codeGo/79/
/work
run_code/791603090352302749
15000
65535
input_file/79_109_1603088749206input.txt
io_data/79_109_1603090352302749output.txt
run_code/79_109_1603090352302749msg.txt
37e55ac77f70fe5a6f6460f869fe5bb7c8aac6bc65b046575ffa75cd848c952c
37e55ac77f70fe5a6f6460f869fe5bb7c8aac6bc65b046575ffa75cd848c952c
msgfile path: /var/www/html/zt-code-evaluation/codeGo/79/run_code/79_109_1603090352302749msg.txt
msgf: [123 34 115 116 97 116 117 115 34 58 34 48 34 44 34 116 105 109 101 85 115 101 100 34 58 34 49 34 44 34 109 101 109 111 114 121 85 115 101 100 34 58 34 49 53 56 56 34 125]
msgf string {"status":"0","timeUsed":"1","memoryUsed":"1588"}
unmarshal
output:
res --
{0 1 1588}
string(outputdataF) --
codemsg -- {"status":"0","timeUsed":"1","memoryUsed":"1588"}
res in  --
0
1ms
1588kb
update run_code set run_data='/var/www/html/zt-code-evaluation/codeGo/79/io_data/79_109_1603090352302749output.txt', msg_data='/var/www/html/zt-code-evaluation/codeGo/79/run_code/79_109_1603090352302749msg.txt' where code_id = 79 and user_id = 109 and select_flag = '65142ef5af467a8f9511358073b4f44a'
select * from eva_code where code_id = 79
&{79 QuickSort 109 #include <bits/stdc++.h>

using namespace std;

int onesort(int r[], int s, int e)//对当前区间进行划分，s为起始位置，e为结束位置
{
    int i = s;
    int j = e;
    while(i < j)//判断左右两边的下标，
    {
        while(i < j && r[i] <= r[j])//先对右边进行扫描，扫描到左边大于右边则停止循环并进行交换，下次从左边扫描
        {
            j--;
        }
        if(i < j)
        {
            int tmp = r[i];
            r[i] = r[j];
            r[j] = tmp;
            i++;
        }
        while(i < j && r[i] <= r[j])//对左边进行扫描，扫描到左边大于右边则停止扫描并进行交换，下次从右边扫描
        {
            i++;
        }
        if(i < j)
        {
            int tmp = r[i];
            r[i] = r[j];
            r[j] = tmp;
            j--;
        }
    }
    return i;//返回当前区间轴值的位置
}

void quicksort(int r[], int s, int e)
{
    if(s < e)
    {
        int mid = onesort(r, s, e);//对当前区间进行划分并取得当前区间的轴值
        quicksort(r, s, mid-1);//对轴值左边区间进行划分
        quicksort(r, mid+1, e);//对轴值右边区间进行划分
    }
}

int main()
{
    int n;
    int r[1000005];

    scanf("%d", &n);
    for(int i = 1; i <= n; i++)
    {
        scanf("%d", &r[i]);
    }
    quicksort(r, 1, n);
    for(int i = 1; i <= n; i++)
    {
        printf("%d%c", r[i], " \n"[i==n]);
    }
    return 0;
}
/*
7
12 15 9 20 6 31 24
8
50 13 55 97 27 38 49 65
7
23 13 49 6 31 19 28
*/

 /var/www/html/zt-code-evaluation/code_file/QuickSort109.cpp 2020-06-07 18:00:54 2020-07-17 18:08:25}

---code running---
select code_id, user_id, input_path from run_code where code_id = 79 and user_id = 109 and select_flag = 'c752cfdf68c231453b85e4857e0eaf96'
/var/www/html/zt-code-evaluation/codeGo/79/
/work
run_code/791603091861576258
15000
65535
input_file/79_109_1603090258478input.txt
io_data/79_109_1603091861576258output.txt
run_code/79_109_1603091861576258msg.txt
d30bb418aeed2a62f7d1b47e47ac182ec477f96449378fb164a7d8e014bbdf5e
d30bb418aeed2a62f7d1b47e47ac182ec477f96449378fb164a7d8e014bbdf5e
msgfile path: /var/www/html/zt-code-evaluation/codeGo/79/run_code/79_109_1603091861576258msg.txt
msgf: [123 34 115 116 97 116 117 115 34 58 34 48 34 44 34 116 105 109 101 85 115 101 100 34 58 34 49 34 44 34 109 101 109 111 114 121 85 115 101 100 34 58 34 49 53 57 54 34 125]
msgf string {"status":"0","timeUsed":"1","memoryUsed":"1596"}
unmarshal
output:
res --
{0 1 1596}
string(outputdataF) --
codemsg -- {"status":"0","timeUsed":"1","memoryUsed":"1596"}
res in  --
0
1ms
1596kb
update run_code set run_data='/var/www/html/zt-code-evaluation/codeGo/79/io_data/79_109_1603091861576258output.txt', msg_data='/var/www/html/zt-code-evaluation/codeGo/79/run_code/79_109_1603091861576258msg.txt' where code_id = 79 and user_id = 109 and select_flag = 'c752cfdf68c231453b85e4857e0eaf96'
select * from eva_code where code_id = 79
&{79 QuickSort 109 #include <bits/stdc++.h>

using namespace std;

int onesort(int r[], int s, int e)//对当前区间进行划分，s为起始位置，e为结束位置
{
    int i = s;
    int j = e;
    while(i < j)//判断左右两边的下标，
    {
        while(i < j && r[i] <= r[j])//先对右边进行扫描，扫描到左边大于右边则停止循环并进行交换，下次从左边扫描
        {
            j--;
        }
        if(i < j)
        {
            int tmp = r[i];
            r[i] = r[j];
            r[j] = tmp;
            i++;
        }
        while(i < j && r[i] <= r[j])//对左边进行扫描，扫描到左边大于右边则停止扫描并进行交换，下次从右边扫描
        {
            i++;
        }
        if(i < j)
        {
            int tmp = r[i];
            r[i] = r[j];
            r[j] = tmp;
            j--;
        }
    }
    return i;//返回当前区间轴值的位置
}

void quicksort(int r[], int s, int e)
{
    if(s < e)
    {
        int mid = onesort(r, s, e);//对当前区间进行划分并取得当前区间的轴值
        quicksort(r, s, mid-1);//对轴值左边区间进行划分
        quicksort(r, mid+1, e);//对轴值右边区间进行划分
    }
}

int main()
{
    int n;
    int r[1000005];

    scanf("%d", &n);
    for(int i = 1; i <= n; i++)
    {
        scanf("%d", &r[i]);
    }
    quicksort(r, 1, n);
    for(int i = 1; i <= n; i++)
    {
        printf("%d%c", r[i], " \n"[i==n]);
    }
    return 0;
}
/*
7
12 15 9 20 6 31 24
8
50 13 55 97 27 38 49 65
7
23 13 49 6 31 19 28
*/

 /var/www/html/zt-code-evaluation/code_file/QuickSort109.cpp 2020-06-07 18:00:54 2020-07-17 18:08:25}

---code running---
select code_id, user_id, input_path from run_code where code_id = 79 and user_id = 109 and select_flag = '8da09c91ea72276f691bb135a041338b'
/var/www/html/zt-code-evaluation/codeGo/79/
/work
run_code/791603091871513268
15000
65535
input_file/79_109_1603090268415input.txt
io_data/79_109_1603091871513268output.txt
run_code/79_109_1603091871513268msg.txt
8e9a900817ab87047c51530a84040509e232011e38408e39b3feaf177853de65
8e9a900817ab87047c51530a84040509e232011e38408e39b3feaf177853de65
msgfile path: /var/www/html/zt-code-evaluation/codeGo/79/run_code/79_109_1603091871513268msg.txt
msgf: [123 34 115 116 97 116 117 115 34 58 34 48 34 44 34 116 105 109 101 85 115 101 100 34 58 34 48 34 44 34 109 101 109 111 114 121 85 115 101 100 34 58 34 49 53 57 54 34 125]
msgf string {"status":"0","timeUsed":"0","memoryUsed":"1596"}
unmarshal
output:
res --
{0 0 1596}
string(outputdataF) --
codemsg -- {"status":"0","timeUsed":"0","memoryUsed":"1596"}
res in  --
0
0ms
1596kb
update run_code set run_data='/var/www/html/zt-code-evaluation/codeGo/79/io_data/79_109_1603091871513268output.txt', msg_data='/var/www/html/zt-code-evaluation/codeGo/79/run_code/79_109_1603091871513268msg.txt' where code_id = 79 and user_id = 109 and select_flag = '8da09c91ea72276f691bb135a041338b'
